image: dr.rechenknecht.net/bauhelfer/container/main/rust:ubuntu-jammy

stages:
  - prepare
  - build
  - lint
  - publish

variables:
  # This will instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  PACKAGE_BASE_VERSION: "0.2"

prepare-rs:
  stage: prepare
  needs: []
  script:
     - export COMMIT_COUNT=`git rev-list --count HEAD`
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" cleanup-daemon/Cargo.toml
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" guest-users-lib/Cargo.toml
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" guest-warning/Cargo.toml
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" nss/Cargo.toml
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" pam/Cargo.toml
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" snap-tricks/Cargo.toml
     - sed -i "s/0.0.0-dev/${PACKAGE_BASE_VERSION}.${COMMIT_COUNT}-${CI_PIPELINE_IID}/g" sync-accountsservice/Cargo.toml
     - cargo install diesel_cli --no-default-features --features "sqlite"
     - diesel migration run --database-url=guest_users.db --config-file guest-users-lib/diesel.toml --migration-dir guest-users-lib/migrations
  artifacts:
    paths:
      - cleanup-daemon/Cargo.toml
      - guest-users-lib/Cargo.toml
      - guest-warning/Cargo.toml
      - nss/Cargo.toml
      - pam/Cargo.toml
      - snap-tricks/Cargo.toml
      - sync-accountsservice/Cargo.toml
      - guest-users-lib/src/db/schema.rs
    expire_in: 1 year
    when: always

lint-rs:
  stage: lint
  needs:
    - prepare-rs
  script:
    - apt-get update
    - apt-get install -q -y libsqlite3-dev libclang-dev libpam-dev libnss3-dev
    - rustup component add clippy
    - cargo clippy -- -Dwarnings
    - rustup component add rustfmt
    - cargo fmt --all -- --check


build-rs:amd64:
  stage: build
  needs:
    - prepare-rs
  parallel:
    matrix:
      - DISTRIBUTION:
          - debian-bookworm
          - ubuntu-jammy
          - ubuntu-noble
  variables:
    RUST_TARGET: "x86_64-unknown-linux-gnu"
  image: dr.rechenknecht.net/bauhelfer/container/main/rust:${DISTRIBUTION}
  script:
    - apt-get update
    - apt-get install -q -y libsqlite3-dev liblzma-dev libclang-dev libpam-dev libnss3-dev
    - cargo install cargo-deb
    - cargo deb --target ${RUST_TARGET} -p guest-users-cleanup-daemon
    - cargo deb --target ${RUST_TARGET} -p guest-users-guest-warning
    - cargo deb --target ${RUST_TARGET} -p guest-users-lib
    - cargo deb --target ${RUST_TARGET} -p guest-users-nss
    - cargo deb --target ${RUST_TARGET} -p guest-users-pam
    - cargo deb --target ${RUST_TARGET} -p guest-users-snap-tricks
    - cargo deb --target ${RUST_TARGET} -p guest-users-sync-accountsservice
    - mkdir -p packages/$DISTRIBUTION/stable
    - cp target/${RUST_TARGET}/debian/*.deb packages/${DISTRIBUTION}/stable
  artifacts:
    paths:
      - packages/${DISTRIBUTION}/stable
    expire_in: 1 week
    when: always

build-rs:arm64:
  stage: build
  needs:
    - prepare-rs
  parallel:
    matrix:
      - DISTRIBUTION:
          - debian-bookworm
          - ubuntu-jammy
          - ubuntu-noble
  variables:
    RUST_TARGET: "aarch64-unknown-linux-gnu"
  image: dr.rechenknecht.net/bauhelfer/container/main/rust:${DISTRIBUTION}-amd64-x-arm64
  script:
    - apt-get update
    - apt-get install -q -y libsqlite3-dev liblzma-dev libclang-dev libpam-dev libnss3-dev
    - apt-get install -q -y libsqlite3-dev:arm64 liblzma-dev:arm64 libpam-dev:arm64 libnss3-dev:arm64
    - cargo install cargo-deb
    - cargo deb --target ${RUST_TARGET} -p guest-users-cleanup-daemon
    - cargo deb --target ${RUST_TARGET} -p guest-users-guest-warning
    - cargo deb --target ${RUST_TARGET} -p guest-users-lib
    - cargo deb --target ${RUST_TARGET} -p guest-users-nss
    - cargo deb --target ${RUST_TARGET} -p guest-users-pam
    - cargo deb --target ${RUST_TARGET} -p guest-users-snap-tricks
    - cargo deb --target ${RUST_TARGET} -p guest-users-sync-accountsservice
    - mkdir -p packages/$DISTRIBUTION/stable
    - cp target/${RUST_TARGET}/debian/*.deb packages/${DISTRIBUTION}/stable
  artifacts:
    paths:
      - packages/${DISTRIBUTION}/stable
    expire_in: 1 week
    when: always

pages:
  stage: publish
  image: dr.rechenknecht.net/bauhelfer/container/main/aptly
  needs:
    - build-rs:amd64
    - build-rs:arm64
  script:
    - mkdir -p public
    - aptly-ci-new-repo guest-users packages public/packages
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
